$package_name$


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Service;

/**
 * email:brioal@foxmail.com
 * github:https://github.com/Brioal
 */
@Service
public class $bean_with_out_bean$ServiceImpl implements $bean_with_out_bean$Service {
    private $bean_with_out_bean$Repository $bean_with_out_bean_low_case$Repository;

    @Autowired
    public void set$bean_with_out_bean$Repository($bean_with_out_bean$Repository $bean_with_out_bean_low_case$Repository) {
        this.$bean_with_out_bean_low_case$Repository = $bean_with_out_bean_low_case$Repository;
    }

    @Override
    public $bean$ save($bean$ bean) {
        $bean$ exitBean = get(bean.getId());
        if (exitBean == null) {
            exitBean = bean;
        } else {
            UpdateTool.copyNullProperties(bean, exitBean);
        }
        $bean_with_out_bean_low_case$Repository.save(exitBean);
        return exitBean;
    }

    @Override
    public $bean$ get(Integer id) {
        if (IntegerUtil.isNotValid(id)) {
            return null;
        }
        return $bean_with_out_bean_low_case$Repository.findById(id).orElse(null);
    }

    @Override
    public $bean$ get($bean$ bean) {
        return $bean_with_out_bean_low_case$Repository.findOne(ExampleUtil.getSimpleExample(bean)).orElse(null);
    }

    @Override
    public Page<$bean$> find($bean$ bean) {
        return $bean_with_out_bean_low_case$Repository.findAll(ExampleUtil.getSimpleExample(bean), bean.getPageRequest());
    }

    @Override
    public void delete(Integer id) {
        if (IntegerUtil.isNotValid(id)) {
            return;
        }
        $bean_with_out_bean_low_case$Repository.deleteById(id);
    }


}
